[{"C:\\Users\\inkann\\post-office\\post-office-react\\src\\index.tsx":"1","C:\\Users\\inkann\\post-office\\post-office-react\\src\\reportWebVitals.ts":"2","C:\\Users\\inkann\\post-office\\post-office-react\\src\\App.tsx":"3","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\NotFound.tsx":"4","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\Header.tsx":"5","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\AddShipment.tsx":"6","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\LoadingSpinner.tsx":"7","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\ShipmentForm.tsx":"8","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\BagParcelRadioButton.tsx":"9","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\FormTextField.tsx":"10","C:\\Users\\inkann\\post-office\\post-office-react\\src\\api\\ShipmentAPI.ts":"11","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\AddBagsToShipment.tsx":"12","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\Shipments.tsx":"13","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\Bags.tsx":"14","C:\\Users\\inkann\\post-office\\post-office-react\\src\\api\\BagAPI.ts":"15","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\BagForm.tsx":"16","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\AddContentToBags.tsx":"17","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\ShipmentFinalized.tsx":"18","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\ContentForm.tsx":"19","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\FormNumberField.tsx":"20","C:\\Users\\inkann\\post-office\\post-office-react\\src\\api\\BagContentAPI.ts":"21","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\FinalizeShipment.tsx":"22","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\BagsList.tsx":"23","C:\\Users\\inkann\\post-office\\post-office-react\\src\\interfaces\\Airport.ts":"24","C:\\Users\\inkann\\post-office\\post-office-react\\src\\interfaces\\Type.ts":"25"},{"size":449,"mtime":1607995487267,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1236,"mtime":1607983285904,"results":"29","hashOfConfig":"27"},{"size":504,"mtime":1607839515897,"results":"30","hashOfConfig":"27"},{"size":1647,"mtime":1607664687852,"results":"31","hashOfConfig":"27"},{"size":190,"mtime":1607706117662,"results":"32","hashOfConfig":"27"},{"size":186,"mtime":1607664726265,"results":"33","hashOfConfig":"27"},{"size":5652,"mtime":1608000166852,"results":"34","hashOfConfig":"27"},{"size":574,"mtime":1607893703124,"results":"35","hashOfConfig":"27"},{"size":637,"mtime":1607915996574,"results":"36","hashOfConfig":"27"},{"size":1929,"mtime":1608000854892,"results":"37","hashOfConfig":"27"},{"size":1373,"mtime":1608013321056,"results":"38","hashOfConfig":"27"},{"size":9626,"mtime":1608087542968,"results":"39","hashOfConfig":"27"},{"size":1269,"mtime":1607997215277,"results":"40","hashOfConfig":"27"},{"size":3021,"mtime":1608013296399,"results":"41","hashOfConfig":"27"},{"size":8882,"mtime":1608088110465,"results":"42","hashOfConfig":"27"},{"size":1353,"mtime":1608002666715,"results":"43","hashOfConfig":"27"},{"size":973,"mtime":1607901468363,"results":"44","hashOfConfig":"27"},{"size":18806,"mtime":1608088224166,"results":"45","hashOfConfig":"27"},{"size":668,"mtime":1607915988566,"results":"46","hashOfConfig":"27"},{"size":846,"mtime":1607975085112,"results":"47","hashOfConfig":"27"},{"size":2858,"mtime":1608088846047,"results":"48","hashOfConfig":"27"},{"size":6832,"mtime":1608087805856,"results":"49","hashOfConfig":"27"},{"size":56,"mtime":1608000460217,"results":"50","hashOfConfig":"27"},{"size":49,"mtime":1608001080736,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ox39sc",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\inkann\\post-office\\post-office-react\\src\\index.tsx",[],["107","108"],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\reportWebVitals.ts",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\App.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\NotFound.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\Header.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\AddShipment.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\ShipmentForm.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\BagParcelRadioButton.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\FormTextField.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\api\\ShipmentAPI.ts",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\AddBagsToShipment.tsx",["109"],"import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport BagForm from \"../components/BagForm\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport BagAPI from \"../api/BagAPI\";\r\nimport ShipmentAPI from \"../api/ShipmentAPI\";\r\nimport IBagCreation from \"../interfaces/IBagCreation\";\r\nimport IShipment from \"../interfaces/IShipment\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n\r\nconst AddBagsToShipment: React.FC<Props> = ({ match }) => {\r\n    const emptyBags: IBagCreation[] = [];\r\n    const [shipment, setShipment] = useState({} as IShipment);\r\n    const [bags, setBags] = useState(emptyBags);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        BagAPI.getAllForShipmentCreate(match.params.id).then((bags) => {\r\n            setBags(bags);\r\n        });\r\n        ShipmentAPI.getShipmentById(match.params.id).then((shipment) => {\r\n            setShipment(shipment);\r\n        });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <BagForm\r\n            shipmentId={match.params.id}\r\n            shipmentNumber={shipment.shipmentNumber}\r\n            isFinalized={shipment.isFinalized}\r\n            bags={bags}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AddBagsToShipment;\r\n","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\Shipments.tsx",["110"],"import React, { useState, useEffect } from \"react\";\r\nimport { Airport } from \"../interfaces/Airport\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport ShipmentAPI from \"../api/ShipmentAPI\";\r\nimport IShipment from \"../interfaces/IShipment\";\r\n\r\ninterface Column {\r\n    id: \"shipmentNumber\" | \"airport\" | \"flightNumber\" | \"flightDate\";\r\n    label: string;\r\n    minWidth?: number;\r\n    align?: \"right\";\r\n    format?: (value: number) => string;\r\n}\r\n\r\nconst columns: Column[] = [\r\n    { id: \"shipmentNumber\", label: \"Shipment number\", minWidth: 150 },\r\n    { id: \"airport\", label: \"Airport\", minWidth: 100 },\r\n    { id: \"flightNumber\", label: \"Flight number\", minWidth: 150 },\r\n    { id: \"flightDate\", label: \"Flight date\", minWidth: 150 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"40%\",\r\n        margin: \"2em auto\",\r\n        boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n    },\r\n    container: {\r\n        maxHeight: \"100%\",\r\n    },\r\n});\r\n\r\nconst Shipments: React.FC = () => {\r\n    const initialValues: IShipment[] = [];\r\n    const [loading, setLoading] = useState(true);\r\n    const [shipments, setShipments] = useState(initialValues);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const classes = useStyles();\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        ShipmentAPI.getAll().then((shipments) => {\r\n            setShipments(shipments);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {shipments\r\n                            .slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((shipments) => {\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        tabIndex={-1}\r\n                                        key={shipments.id}\r\n                                    >\r\n                                        {columns.map((column) => {\r\n                                            const value = shipments[column.id];\r\n                                            if (\r\n                                                column.id === \"shipmentNumber\"\r\n                                            ) {\r\n                                                return (\r\n                                                    <TableCell\r\n                                                        component=\"th\"\r\n                                                        scope=\"row\"\r\n                                                        key={column.id}\r\n                                                        align={column.align}\r\n                                                    >\r\n                                                        <Link\r\n                                                            to={`/shipments/${shipments.id}`}\r\n                                                        >\r\n                                                            {value}\r\n                                                        </Link>\r\n                                                    </TableCell>\r\n                                                );\r\n                                            } else if (\r\n                                                column.id === \"airport\" &&\r\n                                                typeof value === \"number\"\r\n                                            ) {\r\n                                                return (\r\n                                                    <TableCell\r\n                                                        component=\"th\"\r\n                                                        scope=\"row\"\r\n                                                        key={column.id}\r\n                                                        align={column.align}\r\n                                                    >\r\n                                                        {Airport[value]}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            } else if (\r\n                                                column.id == \"flightDate\" &&\r\n                                                typeof value === \"string\"\r\n                                            ) {\r\n                                                return (\r\n                                                    <TableCell\r\n                                                        component=\"th\"\r\n                                                        scope=\"row\"\r\n                                                        key={column.id}\r\n                                                        align={column.align}\r\n                                                    >\r\n                                                        {`${value.substring(\r\n                                                            8,\r\n                                                            10\r\n                                                        )}/${value.substring(\r\n                                                            5,\r\n                                                            7\r\n                                                        )}/${value.substring(\r\n                                                            0,\r\n                                                            4\r\n                                                        )} - ${value.substring(\r\n                                                            11,\r\n                                                            16\r\n                                                        )}`}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            } else {\r\n                                                return (\r\n                                                    <TableCell\r\n                                                        component=\"th\"\r\n                                                        scope=\"row\"\r\n                                                        key={column.id}\r\n                                                        align={column.align}\r\n                                                    >\r\n                                                        {column.format &&\r\n                                                        typeof value ===\r\n                                                            \"number\"\r\n                                                            ? column.format(\r\n                                                                  value\r\n                                                              )\r\n                                                            : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={shipments.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Shipments;\r\n","C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\Bags.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\api\\BagAPI.ts",["111"],"import axios from \"axios\";\r\nimport IBag from \"../interfaces/IBag\";\r\nimport IBagCreate from \"../interfaces/IBagCreate\";\r\nimport IBagCreation from \"../interfaces/IBagCreation\";\r\nimport { Type } from \"../interfaces/Type\";\r\nimport ICreateBagsForShipment from \"../interfaces/ICreateBagsForShipment\";\r\n\r\nexport default abstract class BagAPI {\r\n    private static axios = axios.create({\r\n        baseURL: \"http://localhost:5000/api/bags\",\r\n        headers: {\r\n            common: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        },\r\n    });\r\n\r\n    static async getAllForShipment(id: string): Promise<IBag[]> {\r\n        const url = `/${id}`;\r\n        try {\r\n            const response = await this.axios.get<IBag[]>(url);\r\n            if (response.status === 200) {\r\n                const bags: IBag[] = [];\r\n                response.data.forEach((bag) => {\r\n                    let newBag: IBag = {\r\n                        id: bag.id,\r\n                        bagNumber: bag.bagNumber,\r\n                        type: bag.type,\r\n                        letterCount: bag.letterCount,\r\n                        weight: bag.weight,\r\n                        price: bag.price,\r\n                        parcels: [],\r\n                    };\r\n                    bags.push(newBag);\r\n                });\r\n                return bags;\r\n            }\r\n            return [];\r\n        } catch (error) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    static async getAllForShipmentCreate(id: string): Promise<IBagCreation[]> {\r\n        const url = `/${id}`;\r\n        try {\r\n            const response = await this.axios.get<IBag[]>(url);\r\n            if (response.status === 200) {\r\n                const bags: IBagCreation[] = [];\r\n                response.data.forEach((bag) => {\r\n                    let newBag: IBagCreation = {\r\n                        id: bag.id!,\r\n                        bagNumber: bag.bagNumber,\r\n                        type: bag.type,\r\n                    };\r\n                    bags.push(newBag);\r\n                });\r\n                return bags;\r\n            }\r\n            return [];\r\n        } catch (error) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    static async post(bags: IBagCreate): Promise<string> {\r\n        const url = \"\";\r\n        try {\r\n            const response = await this.axios.post<string>(url, bags);\r\n            if (response.status === 201) {\r\n                return response.data;\r\n            }\r\n            return \"\";\r\n        } catch (error) {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    static async createBagsForShipment(\r\n        bags: ICreateBagsForShipment\r\n    ): Promise<string> {\r\n        const url = \"\";\r\n        try {\r\n            const response = await this.axios.post<string>(url, bags);\r\n            if (response.status === 201) {\r\n                return response.data;\r\n            }\r\n            return \"\";\r\n        } catch (error) {\r\n            return \"\";\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\BagForm.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\AddContentToBags.tsx",["112"],"import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport ContentForm from \"../components/ContentForm\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport BagAPI from \"../api/BagAPI\";\r\nimport ShipmentAPI from \"../api/ShipmentAPI\";\r\nimport IBag from \"../interfaces/IBag\";\r\nimport IShipment from \"../interfaces/IShipment\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n\r\nconst AddContentToBags: React.FC<Props> = ({ match }) => {\r\n    const emptyBags: IBag[] = [];\r\n    const [shipment, setShipment] = useState({} as IShipment);\r\n    const [bags, setBags] = useState(emptyBags);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        BagAPI.getAllForShipment(match.params.id).then((bags) => {\r\n            setBags(bags);\r\n        });\r\n        ShipmentAPI.getShipmentById(match.params.id).then((shipment) => {\r\n            setShipment(shipment);\r\n        });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <ContentForm\r\n            shipmentId={match.params.id}\r\n            shipmentNumber={shipment.shipmentNumber}\r\n            isFinalized={shipment.isFinalized}\r\n            bags={bags}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AddContentToBags;\r\n","C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\ShipmentFinalized.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\ContentForm.tsx",["113"],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\FormNumberField.tsx",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\api\\BagContentAPI.ts",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\pages\\FinalizeShipment.tsx",["114"],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\components\\BagsList.tsx",["115"],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\interfaces\\Airport.ts",[],"C:\\Users\\inkann\\post-office\\post-office-react\\src\\interfaces\\Type.ts",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":26,"column":8,"nodeType":"122","endLine":26,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":139,"column":59,"nodeType":"126","messageId":"127","endLine":139,"endColumn":61},{"ruleId":"128","severity":1,"message":"129","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":26,"column":8,"nodeType":"122","endLine":26,"endColumn":10,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":149,"column":63,"nodeType":"135","messageId":"136","endLine":149,"endColumn":65},{"ruleId":"120","severity":1,"message":"121","line":29,"column":8,"nodeType":"122","endLine":29,"endColumn":10,"suggestions":"137"},{"ruleId":"120","severity":1,"message":"121","line":71,"column":8,"nodeType":"122","endLine":71,"endColumn":10,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["141"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Type' is defined but never used.","Identifier","unusedVar",["142"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["143"],["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"145","fix":"148"},{"desc":"145","fix":"149"},"Update the dependencies array to be: [match.params.id]",{"range":"150","text":"151"},{"range":"152","text":"151"},{"range":"153","text":"151"},{"range":"154","text":"151"},[1038,1040],"[match.params.id]",[1015,1017],[1079,1081],[2442,2444]]